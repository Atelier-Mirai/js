= 機能拡張のご紹介

//abstract{
巻末の参考書籍「CSSグリッドで作るHTML&CSSレッスンブック」をもとに学習すると、
CSSグリッドを使って、素敵なウェブサイトが完成いたします。

これをもとに、サイトの動きを司るJavaScriptの使用など、様々な機能を追加してより魅力的に仕上げていきます。
//}

== ウェブサイト作成の為の三つの言語
ウェブサイトを作成する為に用いられる言語には、大きく次の三つがあります。
//vspace[latex][3mm]
 * @<code>{HTML(@<ruby>{HyperText Markup Language,ハイパーテキストマークアップランゲージ})} @<br>{}
#@# ウェブサイトの文書構造を記述するための言語です。見出し、本文、画像など、それぞれが意味するものについて、専用の「タグ」を使って表現していきます。
#@# HTML(HyperText Markup Language) は、ウェブページを作成するために開発された言語で、
  　HyperText Markup Language を日本語で表すなら、「ハイパーテキストに目印をつける言語」くらいの意味になります。@<br>{}
  　目印をつける(Markup)というのは、文書の各部分（見出し・段落・表・リストなど)が果たしている役割が分かるようにすることです。そのために専用の「タグ」を使います。 @<br>{}
  　コンピュータに理解できるよう文書構造を定義することが、HTMLの最も重要な役割です。
//vspace[latex][3mm]
 * @<code>{CSS(@<ruby>{Cascading Style Sheet,カスケーディング・スタイルシート})} @<br>{}
  　ウェブサイトの見た目を飾り付け、彩る為の言語です。文字の大きさや色の指定から画像の配置先など、様々な装飾を行うことができます。@<br>{}
#@# CSS(Cascading Style Sheet) とは、
#@# ウェブページの要素の配置や見栄えなどを記述するための言語です。指定できる項目は、要素の大きさや配置、要素間の位置関係や空白、要素の境界線や余白、要素間 の間の空白や周囲の余白、文字の大きさや文字や行の間隔、@<ruby>{書体,フォント}の種類や変形(太字や斜体など)、箇条書きの表示書式、背景色や背景画像など多岐に渡ります。
#@# HTMLタグが親子関係(包含関係)にある場合、多くの設定値は親要素に指定されたものが子要素、孫要素に引き継がれ、子要素で指定されたものが追加されていきます。このように設定値が上から下へ伝播していく様子を、階段状の瀧を意味する cascade (カスケード)になぞらえて、命名されました。
  　HTMLのタグが親子関係(包含関係)にある場合、多くの設定値は親要素に指定されたものが子要素、孫要素に引き継がれていきます。このように設定値が上から下へ@<ruby>{伝播,でんぱ}していく様子を、階段状の瀧を意味する @<ruby>{cascade,カスケード}になぞらえて、命名されました。
//vspace[latex][3mm]
 * @<code>{@<ruby>{JavaScript,ジャバスクリプト}} @<br>{}
  　ウェブサイトに、「双方向性・相互作用性（インタラクティブ）」を@<ruby>{齎,もたら}すために用いられるプログラミング言語です。 @<br>{}
  　例えば、閲覧者の操作に反応して表示が書き換わったり、ページが表示される際に写真などの要素に動きや効果を加えたり、サーバと通信してデータを取得したりするなど、現在のウェブサイトには欠かせないプログラミング言語となっています。
#@# 特定のボタンが押された際の動きを記述したり、ページが読み込まれた際のアニメーション効果を実現するなど、様々に活躍します。
#@# JavaScript(ジャバスクリプト) は主にブラウザで動くプログラミング言語です。
#@# JavaScript は、HTML ファイルから JavaScript が書かれたファイルを読み込む形で良く使われます。
//vspace[latex][3mm]

それぞれの詳細を@<ruby>{知悉,ちしつ}することは大変ですが、全てを知らずとも良く使う基本的なコードのみでもウェブサイトの作成は充分可能ですので、学んでいきましょう。

=== 学習の為の参考サイトや書籍のご紹介

==== HTML / CSS を学ぶ為に
ウェブサイト作成のために、様々な参考書籍があり、またネット上でも有益なサイトが多数ありますが、始めて学ぶ方向けには、（準）公式サイトである、ＭＤＮより提供されている

 * @<href>{https://developer.mozilla.org/ja/docs/Learn/Getting_started_with_the_web,ウェブ入門}
 * @<href>{https://developer.mozilla.org/ja/docs/Learn/Getting_started_with_the_web/HTML_basics,HTML の基本}
 * @<href>{https://developer.mozilla.org/ja/docs/Learn/Getting_started_with_the_web/CSS_basics,CSS の基本}

が役に立つことでしょう。
//blankline

また、どのような仕組みでウェブサイトが閲覧できるのか、少し技術的な背景についても知見があると、（専門家を目指す方はもちろんですが） 知的好奇心を満たす点からも楽しいものです。

 * @<href>{https://developer.mozilla.org/ja/docs/Learn/Getting_started_with_the_web/How_the_Web_works,ウェブのしくみ}

//blankline
ＭＤＮでの学習を終えた方には、巻末に挙げた参考書籍の中から次の二冊をお勧めします。

 * CSSグリッドで作る HTML5&CSS3 レッスンブック
 * 作って学ぶ　HTML＆CSSモダンコーディング

前書は、初心者向けに基礎的なウェブサイトの作成を簡単な技術的な背景も含めて解説されている良書です。本書の執筆に関しても、その多くの部分を負っており、貢献に感謝いたします。後書は、前書の学習を終え、基礎的なHTML/CSSが書けるようになった方が、より進んだサイト作成の技術を学ぶために最適な一冊となっています。
//blankline

==== JavaScript を学ぶ為に
JavaScript の学習に当たっては、以下のＭＤＮの説明が概要を掴むには良いでしょう。

 * @<href>{https://developer.mozilla.org/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics,JavaScript の基本}

簡潔に説明されてはいますが、始めてプログラミングに触れる方には少し難しいと感じるかもしれません。そういった方へは、巻末の参考書籍

 * スラスラ読める JavaScript ふりがなプログラミング

がお勧めです。一語一語、漢文に倣った読み下し文でコードの意味が書かれており、短いコードの一文一文を確かめながら実行することで、理解を深めていくことができるようになっています。

JavaScript の 文法を理解し、簡単なコードを書けるようになったところで、実際のウェブサイトに組み込んで見ましょう。

 * 動くWebデザインアイディア帳 / 動くWebデザインアイディア帳 実践編

では、様々な動きを@<ruby>{齎,もたら}すための、 CSSアニメーション や、JavaScript で書かれた各種ライブラリの使い方等が紹介されています。少しコードが汚いのが残念ではありますが、二冊合計で９００ページにも上る豊富な事例が掲載されておりますので、実際のウェブサイト作成に役立つ一冊となっています。

 * JavaScript Primer 迷わないための入門書

は、JavaScript をより深く知りたい方にお勧めの一冊。難易度高目ではありますが、前半だけでも読み通すと、全容を知ることができ、他のプログラミング言語の学習にも生きてくることでしょう。

//blankline
HTML / CSS / JavaScript に関して、本書でも要所要所で解説を加えていきたいと思いますが、紙幅の限りもございますので、上記の参考書籍やサイト等で、適宜学習いただければ幸いです。

== トップページの機能拡張例

「CSSグリッドで作るHTML&CSSレッスンブック」に基づく @<href>{https://wave-example.netlify.app,作成例}に次のような機能拡張を施していきます。

  * ファビコン
  * アップルタッチアイコン
  * 検索エンジン用の説明文
#@# * サイト名の左にロゴマークを表示
  * リンクの無効化
  * 写真のポップアップ
  * 写真をスライドさせる
  * 全画面ヒーローイメージ
  * スクロールを促す為の表示
  * スクロールすると出現するメニュー
  * 光りながら出現する文字
  * 見出しの装飾
  * 装飾的なボタン
  * トップに戻るボタン
  * 様々なフッターの装飾

//image[wave_top][][width=100%]

//blankline

@<href>{https://wave-improve.netlify.app, 機能拡張後の例}です。


//image[zenhan][][width=100%]
//image[kouhan][][width=100%]

== 記事についての機能拡張 （１）

//sideimage[kiji_shashin][70mm][sep=5mm,side=R]{
 * 写真をセピア調にする
 * 枠を付ける
//}

== 記事についての機能拡張 （２）

 * タブ機能
 * 続きを読むボタン

//image[kiji_tabular][][width=100%]

//clearpage

== サイトについての機能拡張例

 * 表を互い違いに色を塗る
 * 見出しの均等割付
 * 電話番号、メールアドレスにリンクを設定する
 * ルビをふる
 * 地図を載せる
 * 紹介動画を掲載する

//image[about][][width=100%]

//clearpage
== お問い合わせページの機能拡張例

  * 記入例(プレースホルダ)の表示
  * スパム対策
  * 必須項目設定
  * 連絡先自動入力
  * ページ離脱時のアラート表示

//image[contact][][width=100%]

  * 問い合わせ完了時の表示
//image[success2][][width=100%]

== その他いろいろ詰め合わせ

=== 桜吹雪を散らせる
//image[sakura_fubuki][][width=75%]

=== 固定フッターと追随メニュー
//image[fixed_and_follow_menu][][width=90%]

=== モーダルウィンドウ
//image[modaal][][width=45%]

=== モバイルメニュー
//image[mobile_menu_all][][width=70%]

=== 種類ごとに絞り込む
//image[ramen_muuri][][width=57%]

=== グラフを描画する
//image[ramen_chart][][width=57%]
